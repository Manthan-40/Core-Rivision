@model RevisioneNew.Models.OpportunityModel

<div class="section-header">
    <div class="d-flex justify-content-between w-100">
        <h1>Opportunities</h1>
        <div class="section-header-breadcrumb">
            <div class="breadcrumb-item active display-4"><a asp-action="Opportunities" asp-controller="Opportunity">Opportunities</a></div>
            <div class="breadcrumb-item display-4">Add or Edit Opportunity</div>
        </div>
    </div>
</div>

<div class="section-body">
    <form asp-action="AddOrEditOpportunity">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="form-group col-md-4 col-12 d-none">
            @Html.LabelFor(t => t.Id, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(t => t.Id, "", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(t => t.Id, "", new { @class = "text-danger" })
        </div>
        <!-- Row 1: Topic, Description -->
        <div class="row">
            <div class="form-group col-md-6 col-12">
                @Html.LabelFor(t => t.Topic, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(t => t.Topic, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(t => t.Topic, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-6 col-12">
                @Html.LabelFor(t => t.Description, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(t => t.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(t => t.Description, "", new { @class = "text-danger" })
            </div>
        </div>


        <!-- Row 3: Budget, Decision Maker -->
        <div class="row">
            <div class="form-group col-md-6 col-12">
                @Html.LabelFor(t => t.BudgetAmount, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(t => t.BudgetAmount, new { htmlAttributes = new { @class = "form-control", type = "number", step = "0.01" } })
                @Html.ValidationMessageFor(t => t.BudgetAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Row 4: Customer Need, Proposed Solution -->
        <div class="row">
            <div class="form-group col-md-6 col-12">
                @Html.LabelFor(t => t.CustomerNeed, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(t => t.CustomerNeed, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(t => t.CustomerNeed, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-6 col-12">
                @Html.LabelFor(t => t.ProposedSolution, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(t => t.ProposedSolution, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(t => t.ProposedSolution, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Row 6: AccountName, ContactName -->
        <div class="row">
            <div class="form-group col-6">
                @Html.LabelFor(t => t.ParentAccountID, htmlAttributes: new { @class = "form-label" })
                <select asp-items="Model.AccountList" asp-for="ParentAccountID" class="form-control">
                    <option value="">--Please Select Account--</option>
                </select>
                @Html.ValidationMessageFor(t => t.ParentAccountID, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-6">
                @Html.LabelFor(t => t.ParentContactID, htmlAttributes: new { @class = "form-label" })
                <select asp-items="Model.ContactList" asp-for="ParentContactID" class="form-control">
                    <option value="">--Please Select Contact--</option>
                </select>
                @Html.ValidationMessageFor(t => t.ParentContactID, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Row 5: PriceLevel, Currency -->
        <div class="row">
            <div class="form-group col-md-6 col-12">
                @Html.LabelFor(t => t.PriceLevelID, htmlAttributes: new { @class = "form-label" })
                <select asp-items="Model.PriceListitems" asp-for="PriceLevelID" class="form-control">
                    <option value="">--Please Select Price Level--</option>
                </select>
                @Html.ValidationMessageFor(t => t.PriceLevelID, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6 col-12">
                @Html.LabelFor(t => t.CurrencyID, htmlAttributes: new { @class = "form-label" })
                <select asp-items="Model.CurrencyList" asp-for="CurrencyID" class="form-control">
                    <option value="">--Please Select Currency--</option>
                </select>
                @Html.ValidationMessageFor(t => t.CurrencyID, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Submit and Cancel buttons -->
        <div class="form-group w-100 text-center">
            <input type="submit" value="Submit" class="btn btn-primary btn-lg" />
            <a asp-action="Opportunities" asp-controller="Opportunity" class="btn btn-secondary btn-lg text-dark">Back</a>
        </div>
    </form>
</div>
