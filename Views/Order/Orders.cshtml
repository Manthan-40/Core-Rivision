
<main>
    <div class="section-header">
        <div class="d-flex justify-content-between w-100">
            <h1>Orders</h1>
            <div class="mb-3 text-center"><a class="btn btn-primary text-light" asp-action="AddorEditOrder" asp-controller="Order"><i class="fas fa-plus"></i> Add Order</a></div>
        </div>
    </div>
    <div class="section-body">
        <table class="table table-bordered" id="table-1" style="width:100%">
            <thead clas>
                <tr>
                    <th>OrderName</th>
                    <th>Customer</th>
                    <th>Status</th>
                    <th>Created On</th>
                    <th>TotalAmount</th>
                    <th>Actions</th>
                </tr>
            </thead>
        </table>
    </div>
</main>




@section Scripts{

    <script src="~/assets/modules/datatables/datatables.min.js"></script>
    <script src="~/assets/modules/datatables/DataTables-1.10.16/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/assets/modules/datatables/Select-1.2.4/js/dataTables.select.min.js"></script>
    <script src="~/assets/modules/sweetalert/sweetalert.min.js"></script>
    <script src="~/assets/modules/jquery-ui/jquery-ui.min.js"></script>
    <script src="~/assets/modules/izitoast/js/iziToast.min.js"></script>

    <script>
                     @if (Convert.ToBoolean(TempData["OpportunityStatus"]))
             {
                    <text>
        iziToast.success({ title: 'Success :', message: '@TempData["OpportunityData"]?.ToString()', position: 'topRight' });
                 </text>
             }
        let opportunityTable;
        $(document).ready(function () {
            opportunityTable = $("#table-1").DataTable({
                "processing": true,
                "serverSide": true,
                //"bStateSave":true,
                "filter": true,
                "ajax": {
                    "url": "/Order/LoadOrderList",
                    "type": "POST",
                    "datatype": "json",
                },
                "columnDefs": [{
                    "targets": [2,3],
                    searchable: false
                }, {
                        "targets": [4],
                    searchable: false,
                    orderable: false
                    }],
                "columns": [
                    { "data": "orderName", "name": "name", "autoWidth": true },
                    {
                        "data": "customerName", "name": "customerid", "autoWidth": true,
                        render: function (data) {
                            if (data == null) {
                                return `<b>No Description Available</b>`
                            }
                            else {
                                return data
                            }
                        }
                    },
                    {
                        "data": "status", "name": "statecode", "autoWidth": true,
                        render: function (data) {
                            if (data == '@OrderStateCode.Active.ToString()')
                            {
                                return `<div class="badge badge-warning">${data}</div>`
                            }
                            else if (data == '@OrderStateCode.Fulfilled.ToString()')
                            {
                                return `<div class="badge badge-success">${data}</div>`
                            }
                            else
                            {
                                return `<div class="badge badge-danger">${data}</div>`
                            }
                        }
                    },
                    {
                        "data": "createdon", "name": "createdon", "autoWidth": true,
                        render: function (data) {
                            let date = new Date(data.split('T')[0]);
                            return date.toLocaleDateString('en-GB')
                        }
                    },
                    {
                        "data": "totalAmount", "name": "totalamount", "autoWidth": true,
                        render: function (data) {
                            return "$ " + parseFloat(data).toFixed(2);
                        }
                    },
                    {
                        render: function (data, type, full, meta) {
                            let ReturnHtml = `<div class="w-100 d-flex justify-content-center">
                                        <button class="btn btn-primary mx-2" onclick="alert('${full.orderId}')" data-toggle="tooltip" data-original-title="Opportunity Information"><i class="fas fa-eye"></i></button>`
                            if (full.status == '@OrderStateCode.Active.ToString()') {
                                ReturnHtml += `<button class="btn btn-info mx-2" onclick="fullfillOrder('${full.orderId}')" data-toggle="tooltip" data-original-title="Fullfill order"><i class="fas fa-file-alt"></i></button>`
                            }
                            if (full.status == '@OrderStateCode.Fulfilled.ToString()') {
                                ReturnHtml += `<button class="btn btn-warning mx-2" onclick="createInvoice('${full.orderId}')" data-toggle="tooltip" data-original-title="Create Invoice"><i class="fas fa-check"></i></button><button class="btn btn-danger mx-2" onclick="cancleOrder('${full.orderId}')" data-toggle="tooltip" data-original-title="Cancle this Order"><i class="fas fa-times"></i></button>`
                            }
                            ReturnHtml += `<button class="btn btn-dark mx-2" onclick="deleteOrder('${full.orderId}')" data-toggle="tooltip" data-original-title="Delete this oppotunity"><i class="fas fa-trash"></i></button></div>`;
                            return ReturnHtml
                        }
                    }
                ]
            });
            $(document).ajaxComplete(function () {
                // Required for Bootstrap tooltips in DataTables
                $('[data-toggle="tooltip"]').tooltip({
                    "html": true,
                    "delay": { "show": 200, "hide": 0 },
                });
            });
        });
        function fullfillOrder(id) {
            $('#mainscreen').show();
            $(document.body).addClass('no-scroll');
                Taskid = id

                $.ajax({
                    url: '@Url.Action("FulfillOrder", "Order")',
                    data: { orderId: Taskid },
                    type: "Post",
                    success: (r) => {
                        $('#mainscreen').hide();
                        $(document.body).removeClass('no-scroll');
                        iziToast.success({
                            title: 'Success :',
                            message: r,
                            position: 'topRight'
                        });
                        opportunityTable.ajax.reload(null,false);
                    },
                    error: (r) => {
                        debugger
                        $('#mainscreen').hide();
                        $(document.body).removeClass('no-scroll');
                        if (r.status == 400) {
                            iziToast.error({
                                title: 'Error :',
                                message: r.responseText,
                                position: 'topRight'
                            });
                        }
                    }
                })
        }

        function createInvoice(id) {
            $('#mainscreen').show();
            $(document.body).addClass('no-scroll')
            Taskid = id

            $.ajax({
                url: '@Url.Action("CreateInvoice", "Order")',
                data: { orderId: Taskid },
                type: "Post",
                success: (r) => {
                    debugger
                    $('#mainscreen').hide();
                    $(document.body).removeClass('no-scroll');
                    iziToast.success({
                        title: 'Success :',
                        message: r,
                        position: 'topRight'
                    });
                    opportunityTable.ajax.reload(null, false);
                },
                error: (r) => {
                    $('#mainscreen').hide();
                    $(document.body).removeClass('no-scroll');
                    debugger
                    if (r.status == 400) {
                        iziToast.error({
                            title: 'Error :',
                            message: r.responseText,
                            position: 'topRight'
                        });
                    }
                }
            })
        }

        function cancleOrder(id) {
            swal({
                title: 'Are you sure?',
                text: 'Are you sure you want to cancel this order?',
                icon: 'warning',
                buttons: true,
                dangerMode: true,
            })
            .then((willDelete) => {
                    if (willDelete) {
                        $('#mainscreen').show();
                        $(document.body).addClass('no-scroll')
                        $.ajax({
                            url: '@Url.Action("CancelOrder", "Order")',
                            data: { orderId: id },
                            type: "Post",
                            success: (r) => {
                                //debugger
                                $('#mainscreen').hide();
                                $(document.body).removeClass('no-scroll');
                                iziToast.success({
                                    title: 'Success :',
                                    message: r,
                                    position: 'topRight'
                                });
                                opportunityTable.ajax.reload(null, false);
                            },
                            error: (r) => {
                                $('#mainscreen').hide();
                                $(document.body).removeClass('no-scroll');
                                //debugger
                                if (r.status == 400) {
                                    iziToast.error({
                                        title: 'Error :',
                                        message: r.responseText,
                                        position: 'topRight'
                                    });
                                }
                            }
                        })
                    }
                });
        }

        function Edit(id) {
            window.location.href = '/Opportunity/AddorEditOpportunity?OpportunityId=' + id;
        }

        function deleteOrder(id) {
            swal({
                title: 'Are you sure?',
                text: 'Are you sure you want to delete this Order?',
                icon: 'warning',
                buttons: true,
                dangerMode: true,
            })
                .then((willDelete) => {
                    if (willDelete) {
                        $('#mainscreen').show();
                        $(document.body).addClass('no-scroll')
                        $.ajax({
                            url: '@Url.Action("DeleteOrder", "Order")',
                            data: { orderId: id },
                            type: "Post",
                            success: (r) => {
                                //debugger
                                $('#mainscreen').hide();
                                $(document.body).removeClass('no-scroll');
                                iziToast.success({
                                    title: 'Success :',
                                    message: r,
                                    position: 'topRight'
                                });
                                opportunityTable.ajax.reload(null, false);
                            },
                            error: (r) => {
                                $('#mainscreen').hide();
                                $(document.body).removeClass('no-scroll');
                                //debugger
                                if (r.status == 400) {
                                    iziToast.error({
                                        title: 'Error :',
                                        message: r.responseText,
                                        position: 'topRight'
                                    });
                                }
                            }
                        })
                    }
                });

        }
    </script>
}